(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{88:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"rightToc",(function(){return b})),t.d(n,"metadata",(function(){return s})),t.d(n,"default",(function(){return d}));var i=t(1),r=t(6),a=(t(0),t(110)),c={id:"chapter-one",title:"eLegal Codingeinheit 1",sidebar_label:"Grundlagen"},b=[{value:"Strings",id:"strings",children:[]},{value:"print",id:"print",children:[]},{value:"Integers",id:"integers",children:[]},{value:"Arithmetische Operationen",id:"arithmetische-operationen",children:[]},{value:"Datentypen",id:"datentypen",children:[{value:"kleine praktische Einheit",id:"kleine-praktische-einheit",children:[]}]},{value:"Variablen",id:"variablen",children:[]},{value:"Division",id:"division",children:[]}],s={id:"chapter-one",title:"eLegal Codingeinheit 1",description:"# eLegal Codingeinheit 1",source:"@site/docs/kapitel1.md",permalink:"/codecamp-website/docs/chapter-one",sidebar_label:"Grundlagen"},l={rightToc:b,metadata:s},p="wrapper";function d(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(a.b)(p,Object(i.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"elegal-codingeinheit-1"},"eLegal Codingeinheit 1"),Object(a.b)("h1",{id:"comments-syntax"},"Comments, Syntax"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-python"}),"# Hallo liebe Kursteilnehmer\n# Das hier ist ein Kommentar\n# Ein Kommentar wird von dem Interpreter ignoriert\n# Der Interpreter ist das Ding, das deinen Code quasi ausf\xfchrt\n# Kommentierter Code wird mit einem \"#\" gekennzeichnet\n# Will man mehrere Zeilen kommentieren, benutzt man das \"\"\" oder '''\n\n'''\nDas hier ist ein praktisches\nBeispiel\n'''\n")),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{}),"'\\nDas hier ist ein praktisches \\nBeispiel\\n'\n")),Object(a.b)("h2",{id:"strings"},"Strings"),Object(a.b)("p",null,"Als Strings bezeichnet man Zeichenketten, hierbei ist es wichtig, dass diese entweder innerhalb von ",Object(a.b)("inlineCode",{parentName:"p"},"'")," oder ",Object(a.b)("inlineCode",{parentName:"p"},'"')," ist"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-python"}),"print('Ich \"bin\" interaktiv!')\nprint(\"Ich 'bin' interaktiv!\")\n")),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{}),"Ich \"bin\" interaktiv!\nIch 'bin' interaktiv!\n")),Object(a.b)("p",null,"Zudem kann man Strings mit einem ",Object(a.b)("inlineCode",{parentName:"p"},"+")," verbinden"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-python"}),'print("Hiermit kann man mehrere" + "Strings verbinden")\n')),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{}),"Hiermit kann man mehrereStrings verbinden\n")),Object(a.b)("h2",{id:"print"},"print"),Object(a.b)("p",null,"Mit der Funktion ",Object(a.b)("inlineCode",{parentName:"p"},"print()")," k\xf6nnen unteranderem Strings wiedergegeben werden."),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-python"}),'from elegal_assert import *\n# Probiere es doch einmal selber\n# Sorge daf\xfcr, dass das Programm "eLegal ist toll!" ausgibt.\n\n#-----------\nx = ""# Hier kommt dein Text hin\nprint(x)\n#-----------\n\n\n\ntestat_string(x)\n')),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{}),"Falscher Text TODO\n")),Object(a.b)("h2",{id:"integers"},"Integers"),Object(a.b)("p",null,"Neben Strings (Zeichenketten) sind Integer (Ganzzahlen) wichtig. Fuer diese gibt es folgende Operationen"),Object(a.b)("h2",{id:"arithmetische-operationen"},"Arithmetische Operationen"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-python"}),"print(5 + 2) # 7\nprint(5 - 2) # 3\nprint(14 / 2) # 7\nprint(2 ^ 3) # 8\nprint(11 % 5) # 1\n")),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{}),"7\n3\n7.0\n1\n1\n")),Object(a.b)("p",null,"Das ",Object(a.b)("inlineCode",{parentName:"p"},"%")," steht fuer den ganzzahligen Rest einer Division.\nHierbei ist es ganz wichtig, dass die Zahlen nicht in Anfuehrungszeichen sind, da sonst wie oben diese einfach nur hintereinandergeschrieben werden"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-python"}),'print(1 + 1) # 2\nprint("1" + "1") # 11\n')),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{}),"2\n11\n")),Object(a.b)("p",null,"Rechtsstudent R m\xf6chte nach seinem Studium gerne bei KPMG arbeiten. Er hat aber geh\xf6rt, dass er hier f\xfcr einen guten Schnitt von mindestens 8 Punkten ben\xf6tigt."),Object(a.b)("p",null,"Berechne Rs Punkteschnitt wie folgt:"),Object(a.b)("p",null,"$$\n\\frac{\\text{Note}_1 + \\text{Note}_2 + \\dots  + \\text{Note}_n}{\\text{Anzahl der Noten}}\n$$"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-python"}),'# Berechne den Schnitt aus diesen drei Noten\nKlausurschnitt = 6 + 7 + 8\n\nx = "ersetze diesen String mit der Rechnung. Tipp, verwende die Variable Klausurenschnitt"\n\n\nklausurenschnitt_check(x)\n')),Object(a.b)("h2",{id:"datentypen"},"Datentypen"),Object(a.b)("p",null,"Um Datentypen zu verbinden, muss man diese vorher umwandeln. Deswegen ist folgendes ungueltig:"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-python"}),'# Don\'t\nprint("Ich habe " + 5 + " Sch\xf6nfelder")\n\n# Do\nprint("Ich habe " + str(5) + " Sch\xf6nfelder")\n')),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{}),'---------------------------------------------------------------------------\n\nTypeError                                 Traceback (most recent call last)\n\n<ipython-input-35-0a7ae42497c8> in <module>\n      1 # Don\'t\n----\x3e 2 print("Ich habe " + 5 + " Sch\xf6nfelder")\n      3\n      4 # Do\n      5 print("Ich habe " + str(5) + " Sch\xf6nfelder")\n\n\nTypeError: can only concatenate str (not "int") to str\n')),Object(a.b)("p",null,Object(a.b)("img",Object(i.a)({parentName:"p"},{src:"https://i.imgflip.com/3bz63n.jpg",alt:"witzige eLegal Meme"}))),Object(a.b)("h3",{id:"kleine-praktische-einheit"},"kleine praktische Einheit"),Object(a.b)("p",null,"Anwalt A ist fortschrittlich und benutzt zur Berechnung seiner Kosten Python.\nIrgendwas funktioniert hier jedoch nicht so richtig. Evtl. Kannst du ihm ja helfen."),Object(a.b)("p",null,"Tipp: Nutze hierfuer die von Python gegebenen Fehlermeldungen."),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-python"}),'# Kostenrechner:\nzwei_stunden = 200\nschriftsatz_pauschale = "500"\n\nkosten = zwei_stunden + schriftsatz_pauschale\nprint(kosten)\n# F\xfchre das Programm doch einmal aus und korrigiere es anhand der Fehlermeldung\n')),Object(a.b)("h2",{id:"variablen"},"Variablen"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-python"}),'x = 3 # Eine Variable x, welche den Integer 3 haelt\n\ns = "Roxin" # Eine Variable s, welche den String \'Roxin\' haelt\n\ny = 7\nprint(x + y) # 10, das Ergebnis der Addition wird ausgegeben\nprint(x) # 3, die Variable x hat ihren Wert nicht geaendert!\n\nz = x + y # das Ergebnis der Operation wird in z festgehalten\nprint(z) # 10\n\nx = 18 # x wird ein neuer Wert zugewiesen; 3 -> 18 !\nprint(x) # 18\n\n# Strings koennen auch mit \'+\' verkettet werden.\nprint(s + " ist toll.") # Roxin ist toll.\n\n# Es ist auch moeglich mehrere Variablen gleichzeitig zuzuweisen\nx, y, z = "Puppe", "Duttge", "Ambos"\nprint(x) # Puppe\nprint(y) # Duttge\nprint(z) # Ambos\n\nx = y = z\nprint(x) # Ambos\nprint(y) # Ambos\nprint(z) # Ambos\n')),Object(a.b)("h2",{id:"division"},"Division"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-python"}),"x = 10 / 2\nprint(x) # 5\n\nx = 5 / 2\nprint(x) # 2.5, eine Fliesskommazahl - eigener Datentyp!\n")),Object(a.b)("p",null,"Hierbei ist zu beachten, dass Dezimalzahlen mit einem Punkt statt einem Komma getrennt werden."))}d.isMDXComponent=!0}}]);