/*! For license information please see 05fbb97f.2a15d2c9.js.LICENSE */
(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{124:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return s})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return u}));var r=t(1),a=t(9),i=(t(0),t(146)),l=t(151),o={id:"chapter-tree",title:"Codingeinheit 3 - Wahrheitswerte, Kontrollstrukturen und Schleifen",sidebar_label:"Wahrheitswerte, Kontrollstrukturen und Schleifen"},s={id:"chapter-tree",title:"Codingeinheit 3 - Wahrheitswerte, Kontrollstrukturen und Schleifen",description:"import CodeBlock from './CodeBlock';",source:"@site/docs/chapter-tree.md",permalink:"/codecamp-website/docs/chapter-tree",sidebar_label:"Wahrheitswerte, Kontrollstrukturen und Schleifen",sidebar:"docs",previous:{title:"Codingeinheit 2 - Funktionen und Scope",permalink:"/codecamp-website/docs/chapter-two"},next:{title:"Codingeinheit 4 - Listen",permalink:"/codecamp-website/docs/chapter-four"}},c=[{value:"Weitere logische Operatoren",id:"weitere-logische-operatoren",children:[]},{value:"while loop",id:"while-loop",children:[]},{value:"Verschachtelte Schleifen",id:"verschachtelte-schleifen",children:[]}],b={rightToc:c},p="wrapper";function u(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(i.b)(p,Object(r.a)({},b,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"booleans"},"Booleans"),Object(i.b)("p",null,"Booleans sind Wahrheitswerte. Diese fassen einen Gesamtausdruck in Wahr (true) oder Falsch (false) zusammen. "),Object(i.b)("p",null,"(Bin\xe4r ",Object(i.b)("inlineCode",{parentName:"p"},"0"),"/",Object(i.b)("inlineCode",{parentName:"p"},"1; logisch"),"w",Object(i.b)("inlineCode",{parentName:"p"},"/"),"f",Object(i.b)("inlineCode",{parentName:"p"},"; Python"),"True",Object(i.b)("inlineCode",{parentName:"p"},"/"),"False`)"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),'\n"""Eine Aussage ist ein aus W\xf6rtern\nund/oder mathematischen Zeichen\naufgebauter Ausdruck,\nvon dem es m\xf6glich und sinnvoll ist zu sagen,\ndass dieser Ausdruck wahr oder falsch ist."""\n\nprint(x)\n\nprint(5 < 3)\nprint(5 > 3)\nprint(3 ==  3)\nprint(3 >= 3)\nprint(not False)\nprint(5 != 4) # hierbei bedeutet das != "nicht gleich"\nprint(not not not True)\nprint(54.4 <= 144.2) \n\nx = True\n# Wir weisen der Variable x eine wahre Aussage zu.\n\nprint(not not x)\nprint(not x)\n')),Object(i.b)("p",null,"Hiebei ist der Unterschied zwischen ",Object(i.b)("inlineCode",{parentName:"p"},"=")," und ",Object(i.b)("inlineCode",{parentName:"p"},"==")," relevant."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"x = 4")," ist ein Zuweisungsoperator. (Der Variable ",Object(i.b)("inlineCode",{parentName:"li"},"x")," wird den Wert ",Object(i.b)("inlineCode",{parentName:"li"},"4")," zugewiesen)"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"x == 4")," ist der logische Vergleich (Der Wert der Variable ",Object(i.b)("inlineCode",{parentName:"li"},"x")," wird auf Gleichheit mit ",Object(i.b)("inlineCode",{parentName:"li"},"4")," \xfcberpr\xfcft)")),Object(i.b)("p",null,"Vertiefe dein Wissen, indem du folgenden Code ausf\xfchrst:"),Object(i.b)(l.a,{frame:"https://trinket.io/embed/python3/eae0dedab7",mdxType:"CodeBlock"},Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),'print("1", True and True)\nprint("2", False and True)\nprint("3", 1 == 1 and 2 == 1)\nprint("4", "test" == "test")\nprint("5", 1 == 1 or 2 != 1)\nprint("6", True and 1 == 1)\nprint("7", False and 0 != 0)\nprint("8", True or 1 == 1)\nprint("9", "test" == "testing")\nprint("10", 1 != 0 and 2 == 1)\nprint("11", "test" != "testing")\nprint("12", "test" == 1)\nprint("13", not (True and False))\nprint("14", not (1 == 1 and 0 != 1))\nprint("15", not (10 == 1 or 1000 == 1000))\nprint("16", not (1 != 10 or 3 == 4))\nprint("17", not ("testing" == "testing" and "Zed" == "Cool Guy"))\nprint("18", 1 == 1 and not ("testing" == 1 or 1 == 0))\nprint("19", "chunky" == "bacon" and not (3 == 4 or 3 == 3))\nprint("20", 3 == 3 and not ("testing" == "testing" or "Python" == "Fun"))\n'))),Object(i.b)("h1",{id:"kontrollfl\xfcsse"},"Kontrollfl\xfcsse"),Object(i.b)("p",null,"Man stelle sich vor, man habe ein Pr\xfcfschema abzuarbeiten. Um zur Erf\xfcllung eines strafrechtlichen Tatbestands zu kommen, m\xfcssen alle Voraussetzungen ohne Ausnahmen erf\xfcllt sein.\nD.h., die Pr\xfcfungspunkte haben einen bestimmten Wahrheitswert inne.\nMithilfe von Wahrheitswerten werden wir in der Programmiersprache Python bestimmte Programmabfolgen kontrollieren k\xf6nnen.\nDiese nennt man in der Informatik ",Object(i.b)("strong",{parentName:"p"},"Kontrollfl\xfcsse")),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),'x = 2\n\nif x > 1:\n    print("X ist gr\xf6\xdfer als 2")\nelse:\n    print("X ist nicht gr\xf6\xdfer als 2")\n')),Object(i.b)("p",null,"Konkret bedeutet es also: wenn X vorliegt f\xfchre Y aus."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),'gegenstand = "Pokal"\nsache = True\nfremd = True\nbesch\xe4digt = False\nzerst\xf6rt = True\nobjektiver_tatbestand_303_I_stgb = False\n\nif sache == True:\n    if fremd == True:\n        if besch\xe4digt == True:\n            objektiver_tatbestand_303_I_stgb = True\n        elif zerst\xf6rt == True:\n            objektiver_tatbestand_303_I_stgb = True\n\nif objektiver_tatbestand_303_I_stgb == True:\n    print("Der objektive Tatbestand von \xa7 303 I Stgb ist im Falle vom " + gegenstand + " erf\xfcllt")\n')),Object(i.b)("p",null,"Hinweis:\nDer Operator elif(andernfalls) steht f\xfcr 'else if' und verweist auf die Alternative der if-Bedingung.",Object(i.b)("br",{parentName:"p"}),"\n",'Eine Besonderheit von einigen Programmiersprachen, wie auch Python, ist, dass man die obige Logik (z.b. "',Object(i.b)("inlineCode",{parentName:"p"},"if fremd == True"),'") auch versimplifiziert Darstellen kann. Aus "',Object(i.b)("inlineCode",{parentName:"p"},"if fremd == True"),'" wird "',Object(i.b)("inlineCode",{parentName:"p"},"if fremd"),'"\nWendet man dieses Wissen an, so ergibt sich folgendes Bild:'),Object(i.b)(l.a,{frame:"https://trinket.io/embed/python3/7185efd25c",mdxType:"CodeBlock"},Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),'gegenstand = "Pokal"\nsache = True\nfremd = True\nbesch\xe4digt = False\nzerst\xf6rt = True\nobjektiver_tatbestand_303_I_stgb = False\n\nif sache:\n    if fremd:\n        if besch\xe4digt:\n            objektiver_tatbestand_303_I_stgb = True\n        elif zerst\xf6rt:\n            objektiver_tatbestand_303_I_stgb = True\n\nif objektiver_tatbestand_303_I_stgb:\n    print("Der objektive Tatbestand von \xa7 303 I StGB ist im Falle vom " + gegenstand + " erf\xfcllt")\n'))),Object(i.b)("h2",{id:"weitere-logische-operatoren"},"Weitere logische Operatoren"),Object(i.b)("p",null,"Manchmal ist es n\xf6tig oder einfach lesbarer mehrere Bedingungen zusammenzufassen. Hierf\xfcr gibt es verschiedene M\xf6glichkeiten:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"or"),": Das logische oder, sprich wenn eins oder beide erf\xfcllt sind (kein Entweder-Oder wie in der deutschen Sprache)")),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"if besch\xe4digt or zerst\xf6rt:\n    objektiver_tatbestand_303_I_stgb = True\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"and"),": Das logische und")),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"if sache and fremd and (besch\xe4digt or zerst\xf6rt):\n    objektiver_tatbestand_303_I_stgb = True\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"not"),": Die logische Negierung")),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"if not (besch\xe4digt and zerst\xf6rt):\n    objektiver_tatbestand_303_I_stgb = False\n")),Object(i.b)(l.a,{frame:"https://trinket.io/embed/python3/eae0dedab7",mdxType:"CodeBlock"},Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),'print("1", True and True)\nprint("2", False and True)\nprint("3", 1 == 1 and 2 == 1)\nprint("4", "test" == "test")\nprint("5", 1 == 1 or 2 != 1)\nprint("6", True and 1 == 1)\nprint("7", False and 0 != 0)\nprint("8", True or 1 == 1)\nprint("9", "test" == "testing")\nprint("10", 1 != 0 and 2 == 1)\nprint("11", "test" != "testing")\nprint("12", "test" == 1)\nprint("13", not (True and False))\nprint("14", not (1 == 1 and 0 != 1))\nprint("15", not (10 == 1 or 1000 == 1000))\nprint("16", not (1 != 10 or 3 == 4))\nprint("17", not ("testing" == "testing" and "Zed" == "Cool Guy"))\nprint("18", 1 == 1 and not ("testing" == 1 or 1 == 0))\nprint("19", "chunky" == "bacon" and not (3 == 4 or 3 == 3))\nprint("20", 3 == 3 and not ("testing" == "testing" or "Python" == "Fun"))\n'))),Object(i.b)("h1",{id:"loops"},"Loops"),Object(i.b)("p",null,"for-Loops"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"Loops (Schleifen) wendet man an, wenn man Dinge mehrfach ausf\xfchren m\xf6chte. Als erstes lernt ihr nun die for-Schleife kennen. Diese wird benutzt, wenn der Code wiederholt ausgef\xfchrt werden soll - die Anzahl der Wiederholungen muss dabei vorgegeben sein.    \n")),Object(i.b)(l.a,{frame:"https://trinket.io/embed/python3/9378a02c9e",mdxType:"CodeBlock"},Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),'Vorlesungen = ["Strafrecht I", "Staatsrecht I", "BGB I"]\nfor x in Vorlesungen:\n print(x)\n\n'))),Object(i.b)("p",null,"range - Die Wiederholungen k\xf6nnen auch mit Hilfe der range-Funktion ausgef\xfchrt werden. Wichtig ist dabei, dass man in der Informatik bei 0 anf\xe4ngt zu z\xe4hlen und nicht bei 1.\nHier ein kleines Beispiel: "),Object(i.b)(l.a,{frame:"https://trinket.io/embed/python3/4290e8d215",mdxType:"CodeBlock"},Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),'gerichtsverfahren = 10\nfor x in range(gerichtsverfahren): # range() beginnt ab 0 an zu z\xe4hlen und stoppt eine Ganzzahl vor dem \xdcbergeben Wert.\n    print("Urteil {}: Im Namen des Volkes ergeht folgendes Urteil".format(x))\n'))),Object(i.b)("h2",{id:"while-loop"},"while loop"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"Im Gegensatz zu den for-loops wiederholen while-loops den Code so lange,bis die gegebene Bedingung nicht mehr wahr ist.  \n")),Object(i.b)("p",null,"Zur Veranschaulichung ein kleines Beispiel:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"import time\nn = 0\n# erh\xf6he n solange, bis n >= 50 ist.\ncondition = n < 50\n\nwhile condition:\n    print(n)\n    n += 5\n")),Object(i.b)(l.a,{frame:"https://trinket.io/embed/python3/8add3e4bd4",mdxType:"CodeBlock"},Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"# T hat O beleidigt. Er hat eine Freiheitsstrafe von einem Jahr erhalten\nfreiheitsstrafe_aktiv = True\ntag = 0\nentlassung = False\nwhile freiheitsstrafe_aktiv:\n    tag += 1 # T sitzt nun einen Tag ab\n    if tag >= 365 or entlassung:\n        break # bricht den loop ab\n    if tag < 365:\n        continue # springt direkt zur Anfangskondition\n     \nprint('Entlassen') # T hat seine Freiheitsstrafe verb\xfc\xdft\n"))),Object(i.b)("h2",{id:"verschachtelte-schleifen"},"Verschachtelte Schleifen"),Object(i.b)("p",null,"Nat\xfcrlich k\xf6nnen Schleifen auch ineinander geschrieben werden."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),'for z\xe4hler1 in range(2):\n    for z\xe4hler2 in range(3):\n        print(z\xe4hler1 + " : " + z\xe4hler2)\n')),Object(i.b)("p",null,"Diese geht pro Durchlauf der \xe4usseren Schleife komplett alle Durchl\xe4ufe der inneren Schleife durch. Es lohnt sich es einfach mal auszuprobieren!"))}u.isMDXComponent=!0},145:function(e,n,t){var r;!function(){"use strict";var t={}.hasOwnProperty;function a(){for(var e=[],n=0;n<arguments.length;n++){var r=arguments[n];if(r){var i=typeof r;if("string"===i||"number"===i)e.push(r);else if(Array.isArray(r)&&r.length){var l=a.apply(null,r);l&&e.push(l)}else if("object"===i)for(var o in r)t.call(r,o)&&r[o]&&e.push(o)}}return e.join(" ")}e.exports?(a.default=a,e.exports=a):void 0===(r=function(){return a}.apply(n,[]))||(e.exports=r)}()},146:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return m}));var r=t(0),a=t.n(r);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=a.a.createContext({}),b=function(e){var n=a.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o({},n,{},e)),t},p=function(e){var n=b(e.components);return a.a.createElement(c.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},h=Object(r.forwardRef)((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=b(t),u=r,h=p["".concat(l,".").concat(u)]||p[u]||d[u]||i;return t?a.a.createElement(h,o({ref:n},c,{components:t})):a.a.createElement(h,o({ref:n},c))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=h;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[u]="string"==typeof e?e:r,l[1]=o;for(var c=2;c<i;c++)l[c]=t[c];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,t)}h.displayName="MDXCreateElement"},151:function(e,n,t){"use strict";var r=t(0),a=t.n(r),i=(t(23),t(17),t(18),t(145)),l=t.n(i),o=t(119),s=t.n(o),c={left:37,right:39};var b=function(e){var n=e.block,t=e.children,i=e.defaultValue,o=e.values,b=Object(r.useState)(i),p=b[0],u=b[1],d=[];return a.a.createElement("div",null,a.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:l()("tabs",{"tabs--block":n})},o.map((function(e){var n=e.value,t=e.label;return a.a.createElement("li",{role:"tab",tabIndex:"0","aria-selected":p===n,className:l()("tab-item",s.a.tabItem,{"tab-item--active":p===n}),key:n,ref:function(e){return d.push(e)},onKeyDown:function(e){return function(e,n,t){switch(t.keyCode){case c.right:!function(e,n){var t=e.indexOf(n)+1;e[t]?e[t].focus():e[0].focus()}(e,n);break;case c.left:!function(e,n){var t=e.indexOf(n)-1;e[t]?e[t].focus():e[e.length-1].focus()}(e,n)}}(d,e.target,e)},onFocus:function(){return u(n)},onClick:function(){return u(n)}},t)}))),a.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},r.Children.toArray(t).filter((function(e){return e.props.value===p}))[0]))};var p=function(e){return a.a.createElement("div",null,e.children)};t.d(n,"a",(function(){return u}));class u extends a.a.Component{render(){return a.a.createElement(b,{defaultValue:"repl",values:[{label:"Python Interpreter",value:"repl"},{label:"Python Code",value:"py"}]},a.a.createElement(p,{value:"repl"},a.a.createElement("iframe",{src:this.props.frame,width:"100%",height:"356",frameborder:"0",marginwidth:"0",marginheight:"0",allowfullscreen:!0})),a.a.createElement(p,{value:"py"},this.props.children))}}}}]);