/*! For license information please see a779c3cd.aa190f6d.js.LICENSE */
(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{136:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return l})),t.d(n,"rightToc",(function(){return s})),t.d(n,"default",(function(){return d}));var r=t(1),i=t(9),a=(t(0),t(145)),c=t(147),o={id:"chapter-one",title:"Codingeinheit 1 - Die Grundlagen",sidebar_label:"Grundlagen"},l={id:"chapter-one",title:"Codingeinheit 1 - Die Grundlagen",description:"import CodeBlock from './CodeBlock';",source:"@site/docs/chapter-one.md",permalink:"/codecamp-website/docs/chapter-one",sidebar_label:"Grundlagen",sidebar:"docs",previous:{title:"Intro",permalink:"/codecamp-website/docs/intro"},next:{title:"Codingeinheit 2 - Funktionen und Scope",permalink:"/codecamp-website/docs/chapter-two"}},s=[{value:"Strings",id:"strings",children:[]},{value:"print",id:"print",children:[]},{value:"Integers",id:"integers",children:[]},{value:"Arithmetische Operationen",id:"arithmetische-operationen",children:[]},{value:"Datentypen",id:"datentypen",children:[{value:"kleine praktische Einheit",id:"kleine-praktische-einheit",children:[]}]},{value:"Variablen",id:"variablen",children:[]}],b={rightToc:s},p="wrapper";function d(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(a.b)(p,Object(r.a)({},b,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"comments-syntax"},"Comments, Syntax"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"# Hallo liebe Kursteilnehmer\n# Das hier ist ein Kommentar\n# Ein Kommentar wird von dem Interpreter ignoriert\n# Der Interpreter ist das Ding, das deinen Code quasi ausf\xfchrt\n# Kommentierter Code wird mit einem \"#\" gekennzeichnet\n# Will man mehrere Zeilen kommentieren, benutzt man das \"\"\" oder '''\n\n'''\nDas hier ist ein praktisches\nBeispiel\n'''\n")),Object(a.b)(c.a,{frame:"https://trinket.io/embed/python3/6921349f7d",mdxType:"CodeBlock"},Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"# Hallo liebe Kursteilnehmer\n# Das hier ist ein Kommentar\n# Ein Kommentar wird von dem Interpreter ignoriert\n# Der Interpreter ist das Ding, das deinen Code quasi ausf\xfchrt\n# Kommentierter Code wird mit einem \"#\" gekennzeichnet\n# Will man mehrere Zeilen kommentieren, benutzt man das \"\"\" oder '''\n\n'''\nDas hier ist ein praktisches \nBeispiel\n'''\n\n"))),Object(a.b)("p",null,"Kommentare werden genutzt, um Informationen im Code zu platzieren, ohne, dass diese vom eigentlichen Programm ausgef\xfchrt werden.\nDies ist hilfreich um das Lesen des Codes zu vereinfachen, sowie eine etwaige Wartung zu erleichtern."),Object(a.b)("h2",{id:"strings"},"Strings"),Object(a.b)("p",null,"Als Strings (\ud83c\udfbb) bezeichnet man Zeichenketten, hierbei ist es wichtig, dass diese entweder innerhalb von ",Object(a.b)("inlineCode",{parentName:"p"},"'")," oder ",Object(a.b)("inlineCode",{parentName:"p"},'"')," ist.\nStrings werden immer dann genutzt, wenn man in irgendeiner Form Textzeichen ben\xf6tigt. Dies kann, beispielsweise, der Fall beim versenden von Informationen sein, oder auch bei der Ausgabe von Informationen."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"print('Ich \"bin\" interaktiv!')\nprint(\"Ich 'bin' interaktiv!\")\n")),Object(a.b)(c.a,{frame:"https://trinket.io/embed/python3/675bec830e",mdxType:"CodeBlock"},Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"print('Ich \"bin\" interaktiv!')\nprint(\"Ich 'bin' interaktiv!\")\n\n"))),Object(a.b)("p",null,"Zudem kann man Strings mit einem ",Object(a.b)("inlineCode",{parentName:"p"},"+")," verbinden"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),'print("Hiermit kann man mehrere " + "Strings verbinden")\n')),Object(a.b)(c.a,{frame:"https://trinket.io/embed/python3/8dbb11f9c0",mdxType:"CodeBlock"},Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),'print("Hiermit kann man mehrere " + "Strings verbinden")\n'))),Object(a.b)("h2",{id:"print"},"print"),Object(a.b)("p",null,"Mit der Funktion ",Object(a.b)("inlineCode",{parentName:"p"},"print()")," k\xf6nnen Strings in der Konsole wiedergegeben werden."),Object(a.b)(c.a,{frame:"https://trinket.io/embed/python3/abce55fd39",mdxType:"CodeBlock"},Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),'from elegal_assert import *\n# Dieses Statment kannst du einfach ignorieren\n\n# Probiere es doch einmal selber\n# Sorge daf\xfcr, dass das Programm "eLegal ist toll!" ausgibt.\n\n#-----------\nx = "hier kommt dein Text rein"\nprint(x)\n#-----------\n\n\n\n\n\ntestat_string(x)\n'))),Object(a.b)("h2",{id:"integers"},"Integers"),Object(a.b)("p",null,"Neben Strings (Zeichenketten) sind Integer (Ganzzahlen) wichtig. F\xfcr diese gibt es folgende Operationen"),Object(a.b)("h2",{id:"arithmetische-operationen"},"Arithmetische Operationen"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"print(5 + 2)\nprint(5 - 2)\nprint(14 / 2)\nprint(2 ^ 3)\nprint(11 % 5)\n")),Object(a.b)(c.a,{frame:"https://trinket.io/embed/python3/c0270b5fd3",mdxType:"CodeBlock"},Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"print(5 + 2)\nprint(5 - 2)\nprint(14 / 2)\nprint(2 ** 3)\nprint(11 % 5)\n\n"))),Object(a.b)("p",null,"Das ",Object(a.b)("inlineCode",{parentName:"p"},"%")," steht f\xfcr den ganzzahligen Rest einer Division.\nHierbei ist es ganz wichtig, dass die Zahlen nicht in Anf\xfchrungszeichen sind, da sonst wie oben diese einfach nur hintereinandergeschrieben werden"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),'print(1 + 1)\nprint("1" + "1")\n')),Object(a.b)(c.a,{frame:"https://trinket.io/embed/python3/f5777c34bc",mdxType:"CodeBlock"},Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),'print(1 + 1)\nprint("1" + "1")\n'))),Object(a.b)("p",null,"Rechtsstudent R m\xf6chte nach seinem Studium gerne bei KPMG arbeiten. Er hat aber geh\xf6rt, dass er hier f\xfcr einen guten Schnitt von mindestens 8 Punkten ben\xf6tigt.\nBerechne Rs Punkteschnitt wie folgt:"),Object(a.b)("center",null,Object(a.b)("img",{src:"https://raw.githubusercontent.com/elegal-ev/codecamp-website/8bb688cc2304711fcf697200f9d6d0be3c5cfcec/static/img/punkteschnitt.svg",alt:"Punkteschnittformel"})),Object(a.b)(c.a,{frame:"https://trinket.io/embed/python3/0979992cbc",mdxType:"CodeBlock"},Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),'from elegal_assert import *\n# Berechne den Schnitt aus diesen drei Noten\nKlausurenschnitt = 6 + 7 + 8\n\nx = "ersetze diesen String mit der Rechnung. Tipp, verwende die Variable Klausurenschnitt"\n\n\n# --- Verfifikation ---\n# --- diesen Code NICHT modifizieren! ---\nklausurenschnitt_check(x)\n'))),Object(a.b)("h2",{id:"datentypen"},"Datentypen"),Object(a.b)("p",null,"Um Datentypen zu verbinden, muss man diese vorher umwandeln. Deswegen ist folgendes ung\xfcltig:"),Object(a.b)(c.a,{frame:"https://trinket.io/embed/python3/0834f18005",mdxType:"CodeBlock"},Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),'# Don\'t\nprint("Ich habe " + 5 + " Sch\xf6nfelder")\n\n# Do\nprint("Ich habe " + str(5) + " Sch\xf6nfelder")\n'))),Object(a.b)("center",null,Object(a.b)("img",{alt:"witzige eLegal Meme",src:"https://i.imgflip.com/3bz63n.jpg"})),Object(a.b)("h3",{id:"kleine-praktische-einheit"},"kleine praktische Einheit"),Object(a.b)("p",null,"Anwalt A ist fortschrittlich und benutzt zur Berechnung seiner Kosten Python.\nIrgendwas funktioniert hier jedoch nicht so richtig. Evtl. Kannst du ihm ja helfen."),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"Tipp: Nutze hierf\xfcr die von Python gegebenen Fehlermeldungen!")),Object(a.b)(c.a,{frame:"https://trinket.io/embed/python3/8abfb712dc",mdxType:"CodeBlock"},Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),'# Kostenrechner:\nzwei_stunden = 200\nschriftsatz_pauschale = "500"\n\nkosten = zwei_stunden + schriftsatz_pauschale\nprint(kosten)\n# F\xfchre das Programm doch einmal aus und korrigiere es anhand der Fehlermeldung\n# Wenn kein Fehler kommt, und eine Ausgabe erscheint, hast du alles richtig gemacht\n'))),Object(a.b)("h2",{id:"variablen"},"Variablen"),Object(a.b)("p",null,"Variablen werden genutzt um auf Werte zu verweisen. Der Vorteil bei deren Verwendung ist, dass man die Werte nicht jedes mal neu schreiben muss, sondern eine einmal deklarierte Variable beliebig oft verwenden kann."),Object(a.b)(c.a,{frame:"https://trinket.io/embed/python3/d4121f4c92",mdxType:"CodeBlock"},Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),'x = 3 # Eine Variable x, welche den Integer 3 haelt\ns = "Roxin" # Eine Variable s, welche den String \'Roxin\' haelt\ny = 7\nprint(x + y) # 10, das Ergebnis der Addition wird ausgegeben\nprint(x) # 3, die Variable x hat ihren Wert nicht geaendert!\nz = x + y # das Ergebnis der Operation wird in z festgehalten\nprint(z) # 10\nx = 18 # x wird ein neuer Wert zugewiesen; 3 -> 18 !\nprint(x) # 18\n# Strings koennen auch mit \'+\' verkettet werden.\nprint(s + " ist toll.") # Roxin ist toll.\n# Es ist auch moeglich mehrere Variablen gleichzeitig zuzuweisen\nx, y, z = "Puppe", "Duttge", "Ambos"\nprint(x) # Puppe\nprint(y) # Duttge\nprint(z) # Ambos\nx = y = z\nprint(x) # Ambos\nprint(y) # Ambos\nprint(z) # Ambos\n'))),Object(a.b)("p",null,"Jedes mal, wenn wir hier eine der Variablen verwenden, wird die Variable quasi, durch den ihr zugewiesenen Wert, ersetzt."))}d.isMDXComponent=!0},144:function(e,n,t){var r;!function(){"use strict";var t={}.hasOwnProperty;function i(){for(var e=[],n=0;n<arguments.length;n++){var r=arguments[n];if(r){var a=typeof r;if("string"===a||"number"===a)e.push(r);else if(Array.isArray(r)&&r.length){var c=i.apply(null,r);c&&e.push(c)}else if("object"===a)for(var o in r)t.call(r,o)&&r[o]&&e.push(o)}}return e.join(" ")}e.exports?(i.default=i,e.exports=i):void 0===(r=function(){return i}.apply(n,[]))||(e.exports=r)}()},145:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return h}));var r=t(0),i=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=i.a.createContext({}),b=function(e){var n=i.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o({},n,{},e)),t},p=function(e){var n=b(e.components);return i.a.createElement(s.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},m=Object(r.forwardRef)((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=b(t),d=r,m=p["".concat(c,".").concat(d)]||p[d]||u[d]||a;return t?i.a.createElement(m,o({ref:n},s,{components:t})):i.a.createElement(m,o({ref:n},s))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,c=new Array(a);c[0]=m;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o[d]="string"==typeof e?e:r,c[1]=o;for(var s=2;s<a;s++)c[s]=t[s];return i.a.createElement.apply(null,c)}return i.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},147:function(e,n,t){"use strict";var r=t(6),i=t(0),a=t.n(i),c=(t(23),t(17),t(18),t(144)),o=t.n(c),l=t(118),s=t.n(l),b={left:37,right:39};var p=function(e){var n=e.block,t=e.children,r=e.defaultValue,c=e.values,l=Object(i.useState)(r),p=l[0],d=l[1],u=[];return a.a.createElement("div",null,a.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:o()("tabs",{"tabs--block":n})},c.map((function(e){var n=e.value,t=e.label;return a.a.createElement("li",{role:"tab",tabIndex:"0","aria-selected":p===n,className:o()("tab-item",s.a.tabItem,{"tab-item--active":p===n}),key:n,ref:function(e){return u.push(e)},onKeyDown:function(e){return function(e,n,t){switch(t.keyCode){case b.right:!function(e,n){var t=e.indexOf(n)+1;e[t]?e[t].focus():e[0].focus()}(e,n);break;case b.left:!function(e,n){var t=e.indexOf(n)-1;e[t]?e[t].focus():e[e.length-1].focus()}(e,n)}}(u,e.target,e)},onFocus:function(){return d(n)},onClick:function(){return d(n)}},t)}))),a.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},i.Children.toArray(t).filter((function(e){return e.props.value===p}))[0]))};var d=function(e){return a.a.createElement("div",null,e.children)};t.d(n,"a",(function(){return u}));var u=function(e){function n(){return e.apply(this,arguments)||this}return Object(r.a)(n,e),n.prototype.render=function(){return a.a.createElement(p,{defaultValue:"repl",values:[{label:"Python Interpreter",value:"repl"},{label:"Python Code",value:"py"}]},a.a.createElement(d,{value:"repl"},a.a.createElement("iframe",{src:this.props.frame,width:"100%",height:"356",frameborder:"0",marginwidth:"0",marginheight:"0",allowfullscreen:!0})),a.a.createElement(d,{value:"py"},this.props.children))},n}(a.a.Component)}}]);